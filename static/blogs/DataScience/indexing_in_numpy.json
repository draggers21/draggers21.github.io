{"blog_content": "It\u2019s strange how I\u2019ve been working on Python since my school days and somehow I managed to skip all these basic concepts all these years only to realize what I had been doing wrong when I learned them.<br /><br /><br /><br /><div class='row'><div class='col' style='text-align: center;'><figure class='figure' style='align-items: center;'><img src='static/images/DataScience/indexing_in_numpy/indexing_in_numpy_1.webp' alt='Numpy Logo' onclick='magnify(this.src)' class='figure-img img-fluid blog-image'><figcaption class='figure-caption blog-fig-caption'>Numpy Logo</figcaption></figure></div></div><br /><br /><br /><br />Numpy Indexing \u2014 Did you know that you can index NumPy arrays with arrays?<br /><br />Say suppose I define an array (arr) of 5\u00d73 -<br /><br />arr = [ [1,2,3], [4,5,6], [7,8,9], [10,11,12], [13,14,15] ]<br /><br />Indexing#1 \u2014 arr[1] = [4,5,6]#2 \u2014 arr[1,2] = 6#3 \u2014 arr[[1,2]] = [[4, 5, 6], [7, 8, 9]]#4 \u2014 arr[[1,4],[1,2]] = [5,15]<br /><br />Here, is the actual code run for these results<br /><br /><br /><br /><div class='row'><div class='col' style='text-align: center;'><figure class='figure' style='align-items: center;'><img src='static/images/DataScience/indexing_in_numpy/indexing_in_numpy_2.webp' alt='Code Snippet' onclick='magnify(this.src)' class='figure-img img-fluid blog-image'><figcaption class='figure-caption blog-fig-caption'>Code Snippet</figcaption></figure></div></div><br /><br /><br /><br />And now follows the explanation for this behavior,<br /><br />#1 IndexingTalking about the first indexing works just like you would expect it to. Gives out the second element from the array as the indexing begins from 0.<br /><br />#2 IndexingFollowing up with the next one also works as expected gives out the exact value at the coordinate for the given array.<br /><br />#3 IndexingThe third one is where it gets interesting, the index mentioned is itself seen to be an array, so we conclude that the output will also be an array but what would it have? This works similar to a for loop, iterates over the index array and keeps appending the parsed elements from our original array to a new one. And finally returns the newly created array.<br /><br />#4 IndexingThe last one is the reason for this entire post to be here. The index, in this case, is an array of arrays \u2014 specifically, an array of two arrays, could we increase the number of arrays? The answer is NO, the number of nested arrays corresponds to the dimensions of the original array. So then, how does it index? The first array corresponds to the x-coordinates and the second one to the y-coordinates. So what it essentially does is, iterates over the array and extracts coordinates points, abscissa from the first and coordinate from the second, and then brings out these coordinates from the original array.Say for this example, the coordinates extracted would be, [1,1] and [4,2].<br /><br /><br /><br />Alright, this teeny tiny concept made my day. Hope this helps out as well in some way!<div class='row'><div class='col'></div><div class='col'></div></div>"}