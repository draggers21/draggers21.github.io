{"blog_content": "Ways to extract data from a website:<br /><br />1. Using API\u2019s. (API is the acronym for Application Programming Interface, which is a software intermediary that allows two applications to talk to each other) Easiest way around to extract data, sadly many websites do not provide APIs either because they do not want to share the particular data or simply because of the lack of knowledge.<br /><br />2. RSS is a type of web feed that allows users and applications to receive regular updates from a website or blog of their choice. The acronym RSS stands for Really Simple Syndication or Rich Site Summary. It is sometimes referred to as the feed or RSS feed.<br /><br />3. Web Scraping: Given the fact that there are many web scrappers present in the market today, they fail to function properly for huge amounts of data and large number of websites.<br /><br /><strong>Web Scrapping:</strong><br /><br />Various websites uploads tons of data at a regular interval and fail to provide a save option or skip it intentionally then the only way out is to manually copy that data, convert it into the desired format and save it. Which is a very tedious task and so comes into play Web Scraping.<br /><br />Essentially a form of data mining<br /><br />Is a technique employed to extract large amounts of data from websites whereby the data is extracted and saved to a local file in your computer.<br /><br /><br /><br /><strong>Problems with Data Scraping:</strong><br /><br />\u00b7 Identification as Bots: Various websites are free to decide if they want to allow access to bots or not. Many out of which block the bots once recognized. The various are certain ways they identify automated web crawlers\u00b7 Captchas: Are silly puzzles that humans find exceptionally easy to crack but that is not the case with bots.\u00b7 Embedded Links: Many websites embed links I laces where the human would not click but a bot does. Example: A link maybe hidden in the same colour as the background.\u00b7 Timing Limitation: A normal person would not usually spend more than a specific time on a particular website; it identifies bots using this approximation as well.\u00b7 Frequent Structural Changes:Websites keep updating their UIs thus hindering the way a bot is programmed.\u00b7 Poor deign and malformed HTML.\u00b7 Slow loading speed due to unexpectedly high number of requests.<br /><br /><br /><br /><strong>Most common Language for Web Scrapping: PYTHON</strong><br /><br />Libraries Available in python:<br /><br />\u00b7 Scrapy \u2014 The complete framework\u00b7 Urllib\u00b7 Python Requests\u00b7 Selenium\u00b7 Beautifulsoup\u00b7 LXML<br /><br /><br /><br /><strong>Introduction to BeautifulSoup</strong><br /><br />Procedure:<br /><br />Step 1: Inspect the website you want to scrape.Step 2: Study the website carefully, the programmer should deeply know about the CSS and HTML of the website he needs to scrape, every single website has a different layout and we need to study it\u2019s pattern before working on the website.Step 3: Installing the third party Packages.Step 4: Happy Coding!<br /><br /><br /><br /><pre class='line-numbers' style='max-height: 500px;'><code class='language-python match-braces'>import requests\nfrom bs4 import BeautifulSoup\nimport csv\nURL = \"http://www.values.com/inspirational-quotes\"\nr = requests.get(URL)\nsoup = BeautifulSoup(r.content, 'html5lib')\nquotes=[] # a list to store quotes\ntable = soup.find('div', attrs = {'id':'container'})\nfor row in table.findAll('div', attrs = {'class':'quote'}):\nquote = {}\nquote['theme'] = row.h5.text\nquote['url'] = row.a['href']\nquote['img'] = row.img['src']\nquote['lines'] = row.h6.text\nquote['author'] = row.p.text\nquotes.append(quote)\nfilename = 'inspirational_quotes.csv'\nwith open(filename, 'wb') as f:\nw = csv.DictWriter(f,['theme','url','img','lines','author'])\nw.writeheader()\nfor quote in quotes:\nw.writerow(quote) \n</code></pre><br /><br /><br /><br />If you believe this added a few drops in the pool of your knowledge, like and share!<div class='row'><div class='col'></div><div class='col'></div></div>"}